package com.example.cmpt362_finalproject.ui.home

import android.content.Intent
import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.fragment.app.Fragment
import androidx.fragment.app.viewModels
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.appcompat.app.AppCompatActivity
import com.example.cmpt362_finalproject.AddBillActivity
import com.example.cmpt362_finalproject.data.BillDatabase
import com.example.cmpt362_finalproject.data.BillModel
import com.example.cmpt362_finalproject.data.BillRepository
import com.example.cmpt362_finalproject.databinding.FragmentHomeBinding
import com.example.cmpt362_finalproject.ui.adapters.BillAdapter
import com.example.cmpt362_finalproject.data.toBillModel
import com.example.cmpt362_finalproject.utils.toBillEntity

class HomeFragment : Fragment() {
    private var _binding: FragmentHomeBinding? = null
    private val binding get() = _binding!!

    private val viewModel: HomeViewModel by viewModels {
        val billDao = BillDatabase.getDatabase(requireContext()).billDao()
        val repository = BillRepository(billDao)
        HomeViewModelFactory(repository)
    }

    private val addBillRequestCode = 1
    private val updateGoalRequestCode = 2

    override fun onCreateView(
        inflater: LayoutInflater,
        container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        _binding = FragmentHomeBinding.inflate(inflater, container, false)
        return binding.root
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        val adapter = BillAdapter(onDeleteClick = { bill ->
            viewModel.deleteBill(bill.toBillEntity())
        })

        binding.recyclerViewUpcomingBills.apply {
            layoutManager = LinearLayoutManager(context)
            this.adapter = adapter
        }

        viewModel.bills.observe(viewLifecycleOwner) { bills ->
            adapter.submitList(bills.map { it.toBillModel() })
        }

        binding.buttonUpdateGoalChallenge.setOnClickListener {
            navigateToUpdateGoalsScreen()
        }

        binding.buttonAddNewBill.setOnClickListener {
            navigateToAddBillScreen()
        }
    }

    private fun navigateToAddBillScreen() {
        val intent = Intent(requireContext(), AddBillActivity::class.java)
        startActivityForResult(intent, addBillRequestCode)
    }

    private fun navigateToUpdateGoalsScreen() {
        val intent = Intent(requireContext(), UpdateGoalChallengeActivity::class.java).apply {
            putExtra("currentAmountSaved", binding.textViewSavingsGoal.text.toString().split("/")[0].removePrefix("$"))
            putExtra("currentSavingsGoal", binding.textViewSavingsGoal.text.toString().split("/")[1].removePrefix("$"))
            putExtra("currentSpendingChallenge", binding.textViewSpendingChallenge.text.toString())
        }
        startActivityForResult(intent, updateGoalRequestCode)
    }

    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
        super.onActivityResult(requestCode, resultCode, data)
        if (requestCode == addBillRequestCode && resultCode == AppCompatActivity.RESULT_OK) {
            val billName = data?.getStringExtra("bill_name")
            val dueDate = data?.getStringExtra("due_date")
            val amount = data?.getStringExtra("amount")?.toDoubleOrNull()

            if (billName != null && dueDate != null && amount != null) {
                val newBill = BillModel(
                    id = 0, // ID will be autogenerated
                    title = billName,
                    amount = amount,
                    dueDate = dueDate
                )
                viewModel.insertBill(newBill)
            }
        } else if (requestCode == updateGoalRequestCode && resultCode == AppCompatActivity.RESULT_OK) {
            val newAmountSaved = data?.getStringExtra("updatedAmountSaved") ?: "0"
            val newSavingsGoal = data?.getStringExtra("updatedSavingsGoal") ?: "0"
            val newSpendingChallenge = data?.getStringExtra("updatedSpendingChallenge") ?: ""

            // Update UI for Goals and Challenges
            binding.textViewSavingsGoal.text = "$$newAmountSaved/$$newSavingsGoal"
            binding.textViewSpendingChallenge.text = newSpendingChallenge
        }
    }

    override fun onDestroyView() {
        super.onDestroyView()
        _binding = null
    }
}